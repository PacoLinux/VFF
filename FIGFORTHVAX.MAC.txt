























	R3-----POINTS TO BOTTOM OU USER AREA
	R4-----USED AS A TEMPORARY ACCUMULATOR
	R5-----USED AS A TEMPORARY ACCUMULATOR
	R6-----POITS TO CURRENT INSTRUCTION
	R7-----CONTAINS FOERTH W REGISTER
	R8-----POITS TO CURRENT WORD ON RETURN STACK
	R9-----POINTS TO FIRST FREE BYTE IN DATA STACK
	R10----USED AS A TEMPORARY POINTER
	R11----USED AS A TEMPORARY POINTER

				MEMORY MAP
				
	---------------------------------------
	4 SCREEN BUFFERS
	---------------------------------------
	USER AREA
	------------------------------------
	RETURN STACK
	-------------------------------------
	TERMINAL BUFFER
	--------------------
	COMPUTATION STACK
	----------------
	FREE SPACE
	-------------------------
	TEXT BUFFER
	-------------------
	WORD BUFFER
	----------------
	PERMANENT DIRECTORY
	---------------------
	BOOT UP PARAMETERS
	---------------
	I/O INITIALIZATION
	---------------
	




















;		--------------------------------------
;
		.TITLE VAX FIG-FORTH
		.PSECT	VIRTUAL_MACHINE,WRT,EXE,LONG
		.ENTRY	FORTH,^M<R3,R4,R5,R6,R7,R8,R9,R10,R11>

START:	NOP					;TRANSLATE SYS$INPUT FOR I/O USE



		$TRNLOG_S LOGNAM=TTNAME,RSLLEN=NLEN,RSLBUF=DEVDESC
		
		CMPB	NAME,#^X1B
		BNEQ	10$
		SUBL	#4,NLEN
		ADDL	#4,NADDR
10S:	$ASSIGN_S DEVNAM=DEVDESC,CHAN=TTCHAN

		CLRW	TCLC
		$QIO_S	CHAN=TTCHAN,-
		FUNC=#IO$_SETMODE!IO$M_CTRLCAST,-
		P1=CTRLCAST,P3=#3

		
		JMP		COLD
		
FIRSTH	=^XA000
LIMITH	=^XB010



		.WORD	0
TEMP1:	.BLKB	1
CLTC:	.BLKW	1
SEED:	.BLKB	1
TTNAME:	.ASCID	/SYS$INPUT/
TTCHAN:	.BLKW	1
TTIOSB:	.BLKW	1
TTIOLEN:
		.BLKW	1
		.BLKL	1
DEVDESC:
NLEN:	.LONG	63
NADDR:	.LONG	NAME
NAME:	.BLKB	63


		.ALIGN	LONG,0
		$FIBDEF
		$IODEF
		$RMSDEF
NAMBLK:	$NAM
FAB_RBLOCK:

		$FAB	ALQ=1,FAC=GET,FNA=FILNAM,FNS=FILSIZ,-
				FOP=CTG,MRS=1024,NAM=NAMBLK,ORG=SEQ,RFM=FIX
FAB_WBLOCK:
		$FAB	ALQ=1,FAC=PUT,FNA=FILNAM,FNS=FILSIZ,-
				FOP=CTG,MRS=1024,NAM=NAMBLK,ORG=SEQ,RFM=FIX
		













COLD:	CLRL 	R3
		CLRL 	R4
		CLRL	R5
		CLRL R6
		CLRL R7
		CLRL R8
		CLRL R9
		CLRL R10
		CLRL 	R11
		MOVW	#SRTPARM,R10
		MOVW	#FRTH+14,R11
		MOVW	(R10),(R11)
		MOVB	#^X0B,R4
		JMP		PUTF
WARM:	CLRL	R4
		MOVB	#^X08,R4
PUTF:	MOVW	#SRTPARM+^X4,R10
		MOVW	(R10),R3
		MOVW 	#SRTPARM,R10
		MOVW	R3,R11
WRMLP:	MOVW	(R10)+,(R11)+
		SOBGTR	R4,WRMLP
		MOVW	#ABORT+2,R6
		JMP		RP1+2
		
;				START OF FORTH PROGRAM
;
;
;
;				STARTUP PARAMETERS
;

		.ASCII 	/VAX 11-780/
		.BLKW	2
SERTPARM:
		.WORD	TASK-7
		.WORD 	^X7F
		.WORD	FEND+^X5000
		.WORD	FEND+^X4800
		.WORD	FEND+^X4FFF
		.WORD	31
		.WORD	1
		.WORD	FEND
		.WORD	FEND
		.WORD 	FRTH+16
		
		
		
		
		
		.BYTE	^X83
		.ASCII 	/LI/
		.BYTE	^XD4
		.WORD	0
LIT:	.WORD	LIT+2
		ADDW2	#2,R9
		MOVW	(R6)+,(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X87
		.ASCII	/EXECUT/
		.BYTE	^XC5
		.WORD	LIT-6
EXE:	.WORD	EXE+2
		MOVW	(R9),R7
		SUBW2	#2,R9
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X86
		.ASCII	/BRANC/
		.BYTE	^XC8
		.WORD	EXE-10
BRCH:	.WORD	BRCH+2
		MOVW	(R6)+,R6
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X87
		.ASCII	/0BRANC/
		.BYTE	^XC8
		.WORD	BRCH-9
ZBRCH:	.WORD	ZBRCH+2
		TSTW	(R9)
		BEQLU	ZBR1
		SUBW2	#2,R9
		ADDW2	#2,R6
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
ZBR1:	SUBW2	#2,R9
		MOVW	(R6)+,R6
		MOVW	(R4)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X86
		.ASCII 	/(LOOP/
		.BYTE	^XA9
		.WORD	ZBRCH-10
LUPE:	.WORD	LUPE+2
		ADDW2	#1,(R8)
		MOVW	(R8)+,R11				;INDEX AND TEST FOR LOOP COMPLETION
		SUBW3	R11,(R8)+,R11
		BGTR	LUPE2
		ADDW2	#2,R6
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
LUPE2:	SUBW2	#4,R8
		MOVW	(R6)+,R6
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X87
		.ASCII	/(+LOOP/
		.BYTE	^XA9
		.WORD	LUPE-9
PLUPE:	.WORD	PLUPE+2
		TSTW	(R9)
		BLSS	NPLUPE
		ADDW3	(R8),(R9),(R8)
		SUBW2	#2,R9
		MOVW	(R8)+,R11
		SUBW3	R11,(R8)+,R11
		BGTR	PLUPE2
		ADDW2	#2,R6
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
PLUPE2:	SUBW2	#4,R8
		MOVW	(R6)+,R6
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
NPLUPE:	ADDW3	(R8),(R9),(R8)			; NEGATIVE INCREMENTS ARE HANDLED HERE
		SUBW2	#2,R9
		MOVW	(R8)+,R11
		SUBW2	(R8)+,R11
		BGTR	PLUPE2
		ADDW2	#2,R6
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X84
		.ASCCI	/(DO/
		.BYTE	.^XA9
		.WORD	.PLUPE-10
PDO:	.WORD	PDO+2
		SUBW2	#2,R9
		MOVW	(R9)+,-(R8)
		MOVW	(R9),-(R8)
		SUBW2	#4,R9
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP 	(R11)
		
		.BYTE	^X85
		.ASCII 	/DIGI/
		.BYTE	^XD4
		.WORD	PDO-7
DGT:	.WORD	GDT+2
		SUBW2	#2,R9
		SUBB3	#^X30,(R9),R5				; UNSUCCESSFUL
		BLSSU	DOK
		CMPB	R5,#^X0A
		BLLSU	DOK
		CMPB	R5,#^X11
		BLSSU	BAD
		CMPA	R5,#^X2B
		BGEQU	BAD
		SUBB2	#^X07,R5
DOK:	ADDW2	#2,R9
		CMPB	R5,(R9)
		BGEQU	BAD
		SUBW2	#2,R9
		MOVW	R5,(R9)+
		MOVW	#1,(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
BAD:	MOVW	#0,(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+R11
		JMP		(R11)
		
		.BYTE	^X86
		.ASCII	/(FIND/
		.BYTE	^XA9
		.WORD	DGT-8
.FIND	.WORD	FIND+2



		CLRL	R4
		MOVZWL	(R9),R10
		MOVZWL	-(R3),R11
FIND1:	MOVZWL	(R1),R5
		XORB3	(R10)+,(R11)+,R4
		BITB	#^X3F,R4
		BNEQU	PFIND9
FIND2:	TSTB	(R10)
		BGTR	PFIND8
		XORB3	(R10)+,(R11)+,R4
		BITB	#^X7F,R4
		BEQLU	FOUND
PFIND3	TSTW	(R10)
		BNEQU	BOK
		CLRW	(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
PFIND8:	XORB3	(R19)+,(R11)+,R4
		BEQLU	FIND2
PFIND9:	BITB	#^X80,(R10)+
		BEQLU	PFIND9
		JMP		FPIND3
FOUND:	ADDW2	#4,R10
		MOVW	R10,(R9)+
		MOVW	R5,(R9)+
		MOVW	#1,(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
BOK:	MOVW	(R10),R10
		MOVW	(R9),R11
		JMP		FIND1
		
		.BYTE	^X87
		.ASCII	/ENCLOS/
		.BYTE	^XC5
		.WORD	FIND-9
ENCL:	.WORD	ENCL+2

		CLRL	R4
		CLRL	R11
		SUBW2	#2,R9
		MOVZWL	(R9)+,R10
		MOVZBL	(R9),R5
LOP1:	TSTB	(R10)
		BEQLU	NULL
		SUBB3	(R10),R5,R4
		BNEQU	FRST
		INCW	R10
		INCW	R11
		JMP		LOP1
FRST:	MOVW	R11,(R9)+
LOP2:	TSTB	(R10)
		BEQLU	NULL1
		SUBB3	(R10),R5,R4
		BEQLU	DELIM
		INCW	R10
		INCW	R11
		JMP		LOP2
DELIM:	MOV		R11,(R9)+
		ADDW3	#1,R11,(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
NULL:	MOVW	R11,(R9)+
		ADDW3	#1,R11,(R9)+
		JMP		NULL2
NULL1:	MOVW	R11,(R9)+
NULL2:	MOVW	R11,(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X85
		.ASCII	/CMOV/
		.BYTE 	^XC5
		.WORD	ENCL-10
CMOVE	.WORD	CMOVE+2


		MOVZWL	(R9), R5
		MOVZWL	-(R9),R10
		MOVZWL	-(R9),R11
		SUBW2	#2,R9
LUUP:	MOVB	(R11)+,(R10)+
		SOBGTR	R5,LUUP
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)

		.BYTE	^X82
		.ASCII	/U/
		.BYTE	^XAA
		.WORD	CMOVE-8
USTAR:	.WORD	USTAR+2
		MOVZWL	(R9),R10
		MOVZWL	-(R9),R11
		MULL3	R11,R10,R11
		MOVL	R11,(R9)
		ADDW2	#2,R9
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X82
		.ASCII	/U/
		.BYTE	^XAF
		.WORD	USTAR-5
USLSH:	.WORD	USLSH+2
		CLRL	R11
		MOVZWL	(R9),R4
		SUBW2	#4,R9
		MOVL	(R9),R10
		EDIV	R4,R10,R4,R10
		MOVW	R10,(R9)+
		MOVW	R4,(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X83
		.ASCII	/AN/
		.BYTE	^XC4
		.WORD	USLSH-5
FAND:	.WORD	FAND+2
		MCOMW	(R9),R10
		BICW2	R10,-(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X82
		.ASCII	/O/
		.BYTE	^XD2
		.WORD	FAND-6
FFOR:	.WORD	FFOR+2
		BISW2	(R9),-(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X83
		.ASCII	/XO/
		.BYTE	^XD2
		.WORD	FFOR-5
FXOR:	.WORD	FXOR+2
		XORW2	(R9),-(R9)
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X83
		.ASCII	/SP/
		.BYTE	^XC0
		.WORD	FXOR-6
FSPAT:	.WORD	FSPAT+2
		MOVW	R9,R10
		ADDW2	#2,R9
		MOVW	R10,(R9)
		MOVW	(R6)+,R7
		MOV2WL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X83
		.ASCII	/SP/
		.BYTE	^XA1
		.WORD	FSPAT-6
SP1:	.WORD	SP1+2
		ADDW3	#^X6,R3,R4
		SUBW3	#2,(R4),R9
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X83
		.ASCII	/RP/
		.BYTE	^XA1
		.WORD	SP1-6
RP1:	.WORD	RP1+2
		ADDW3	#^X8,R3,R4
		MOVW	(R4),R8
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X82
		.ASCII	/;/
		.BYTE	^XD3
		.WORD	RP1-6
SEMIS:	.WORD	SEMIS+2
		MOVW	(R8)+,R6
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X85
		.ASCII	/LEAV/
		.BYTE	^XC5
		.WORD 	SEMIS-5
LVE:	.WORD	LVE+2
		MOVW	(R8)+,R10
		MOVW	R10,(R8)
		SUBW2	#2,R8
		MOVW	(R6)+,R7
		MOVZWL	(R7)+,R11
		JMP		(R11)
		
		.BYTE	^X82
		.ASCII 	/>/
		.BYTE	^XD2
		.WORD	LVE-8
GR:		.WORD	GR+2
		MOVW	(R9),-(R8)
		SHRW2	#2,R9
		MOVW	(RW)+,R7
		MOVZWL	(R7)+,R11





















































END.
